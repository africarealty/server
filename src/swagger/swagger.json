{
    "swagger": "2.0",
    "info": {
        "description": "AfricaRealty is an advanced realty service",
        "title": "AfricaRealty API",
        "contact": {
            "name": "Api service support",
            "email": "support@africarealty.io"
        },
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logins user by email/password",
                "parameters": [
                    {
                        "description": "auth request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logouts user",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "sets a new password for the user",
                "parameters": [
                    {
                        "description": "set password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/registration": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "registers a new client",
                "parameters": [
                    {
                        "description": "registration request",
                        "name": "regRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ClientRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ClientUser"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "refreshes auth token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SessionToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "check system is ready",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ClientRegistrationRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email - user's email",
                    "type": "string"
                },
                "firstName": {
                    "description": "FirstName - user's first name",
                    "type": "string"
                },
                "lastName": {
                    "description": "LastName - user's last name",
                    "type": "string"
                },
                "password": {
                    "description": "Password - password",
                    "type": "string"
                }
            }
        },
        "auth.ClientUser": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email - email",
                    "type": "string"
                },
                "firstName": {
                    "description": "FirstName - user's first name",
                    "type": "string"
                },
                "id": {
                    "description": "Id - user ID",
                    "type": "string"
                },
                "lastName": {
                    "description": "LastName - user's last name",
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email - login",
                    "type": "string"
                },
                "password": {
                    "description": "Password - password",
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Token - auth token must be passed as  \"Authorization Bearer\" header for all the requests (except ones which don't require authorization)",
                    "$ref": "#/definitions/auth.SessionToken"
                },
                "userId": {
                    "description": "UserId - ID of account",
                    "type": "string"
                }
            }
        },
        "auth.SessionToken": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "AccessToken",
                    "type": "string"
                },
                "accessTokenExpiresAt": {
                    "description": "AccessTokenExpiresAt - when access token expires",
                    "type": "string"
                },
                "refreshToken": {
                    "description": "RefreshToken",
                    "type": "string"
                },
                "refreshTokenExpiresAt": {
                    "description": "RefreshToken - when refresh token expires",
                    "type": "string"
                },
                "sessionId": {
                    "description": "SessionId - session ID",
                    "type": "string"
                }
            }
        },
        "auth.SetPasswordRequest": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "description": "NewPassword - new password",
                    "type": "string"
                },
                "prevPassword": {
                    "description": "PrevPassword - current password",
                    "type": "string"
                }
            }
        },
        "http.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is error code provided by error producer",
                    "type": "string"
                },
                "details": {
                    "description": "Details is additional info provided by error producer",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Message is error description",
                    "type": "string"
                },
                "translationKey": {
                    "description": "TranslationKey is error code translation key",
                    "type": "string"
                },
                "type": {
                    "description": "Type is error type (panic, system, business)",
                    "type": "string"
                }
            }
        }
    }
}